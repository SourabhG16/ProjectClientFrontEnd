{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<!--\\n  Generated template for the RegisterPage page.\\n\\n  See http://ionicframework.com/docs/components/#navigation for more info on\\n  Ionic pages and navigation.\\n-->\\n<ion-header>\\n\\n    <ion-toolbar>\\n      <ion-title>register</ion-title>\\n    </ion-toolbar>\\n  \\n  </ion-header>\\n  \\n  <ion-content padding>\\n    <form [formGroup]=\\\"credentialsForm\\\" (ngSubmit)=\\\"register()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label floating>Name</ion-label>\\n        <ion-input formControlName=\\\"Name\\\" type=\\\"text\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label floating>Age</ion-label>\\n        <ion-input formControlName=\\\"Age\\\" type=\\\"Number\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n  \\n  <!-- <ion-list radio-group >\\n      <ion-item>\\n      <ion-label>Male</ion-label>\\n      <ion-radio formControlName=\\\"gender\\\" value=\\\"Male\\\" checked></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label>Female</ion-label>\\n        <ion-radio formControlName=\\\"gender\\\" value=\\\"Female\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label>Others</ion-label>\\n        <ion-radio formControlName=\\\"gender\\\" value=\\\"Others\\\" [disabled]=\\\"isDisabled\\\"></ion-radio>\\n      </ion-item>\\n  </ion-list> -->\\n  <!-- second way -->\\n  <!-- <ion-list radio-group ngDefaultControl [formControl]=\\\"credentialsForm.controls['gender']\\\">\\n      <ion-list-header>\\n        Gender\\n      </ion-list-header>\\n      <ion-item>\\n        <ion-label>Male</ion-label>\\n        <ion-radio value=\\\"Male\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Female</ion-label>\\n        <ion-radio value=\\\"Female\\\"></ion-radio>\\n      </ion-item>\\n    </ion-list> -->\\n    <ion-item>\\n        <ion-label floating>Gender</ion-label>\\n        <ion-input formControlName=\\\"Gender\\\" type=\\\"text\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label floating>Birthdate</ion-label>\\n        <ion-input formControlName=\\\"Birthdate\\\"type=\\\"Birthdate\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label floating>Address</ion-label>\\n        <ion-input formControlName=\\\"Address\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label floating>Email-Address</ion-label>\\n        <ion-input formControlName=\\\"Email\\\" type=\\\"email\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label floating>Id-Number-Received</ion-label>\\n        <ion-input formControlName=\\\"IdReceiver\\\" type=\\\"text\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-list>\\n        <ion-radio-group formControlName=\\\"Type\\\">\\n          <ion-list-header>\\n            <ion-label>Type</ion-label>\\n          </ion-list-header>\\n      \\n          <ion-item>\\n            <ion-label>Tourist</ion-label>\\n            <ion-radio slot=\\\"start\\\" value=\\\"Tourist\\\" checked></ion-radio>\\n          </ion-item>\\n      \\n          <ion-item>\\n            <ion-label>Commuter</ion-label>\\n            <ion-radio slot=\\\"start\\\" value=\\\"Commuter\\\"></ion-radio>\\n          </ion-item>\\n      \\n          <!-- <ion-item>\\n            <ion-label>Buford</ion-label>\\n            <ion-radio slot=\\\"start\\\" value=\\\"buford\\\"></ion-radio>\\n          </ion-item> -->\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-item>\\n        <ion-label floating>Password</ion-label>\\n        <ion-input formControlName=\\\"Password\\\" type=\\\"password\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label floating>Confirm Password</ion-label>\\n        <ion-input formControlName=\\\"Confirm\\\" type=\\\"password\\\" value=\\\"\\\"></ion-input>\\n      </ion-item>\\n  \\n      <div padding>\\n          <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!credentialsForm.valid\\\" >Register</ion-button>\\n      </div>\\n    </ion-list>\\n  \\n    </form>\\n  </ion-content>\\n  \"","import { Component, OnInit } from '@angular/core';\n// import { IonicPage, NavController, NavParams } from 'ionic-angular';\n// import { TabsPage } from '../tabs/tabs';\n\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormControl, EmailValidator, ReactiveFormsModule} from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n// import { EMAIL_VALIDATOR } from '@angular/forms/src/directives/validators';\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n// @IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: './register.page.html',\n})\nexport class RegisterPage implements OnInit {\n  credentialsForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService , private router: Router) { }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RegisterPage');\n  }\n  ngOnInit() {\n    this.credentialsForm = this.formBuilder.group({\n      Password: ['', [Validators.required, Validators.minLength(6)]],\n      Name: ['', Validators.required],\n       Age: [null, Validators.required],\n       Gender: ['', Validators.required],\n       Type:['',Validators.required],\n       Birthdate: ['', Validators.required],\n       Address: ['', Validators.required],\n       Email: ['', [EmailValidator, Validators.required]],\n       IdReceiver: ['', Validators.required],\n       Confirm: ['', [Validators.required, Validators.minLength(6)]]\n    });\n    // {\n    //   validator: PasswordValidation.MatchPassword // your validation method\n    // });\n  }\n  register() {\n    this.authService.register(this.credentialsForm.value).subscribe(res => {\n      // Call Login to automatically login the new user\n      // this.authService.login(this.credentialsForm.value).subscribe();\n      // redirect to login page\n      this.router.navigateByUrl('/login');\n    });\n  }\n}\nexport class PasswordValidation {\n\n  static MatchPassword(AC: AbstractControl) {\n     let password = AC.get('Password').value; // to get value in input tag\n     let confirmPassword = AC.get('Confirm').value; // to get value in input tag\n      if(password !== confirmPassword) {\n          console.log('false');\n          AC.get('Confirm').setErrors( {MatchPassword: true} )\n      } else {\n          console.log('true');\n          return null;\n      }\n  }\n}\n"],"sourceRoot":""}